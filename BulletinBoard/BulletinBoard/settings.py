"""
Django settings for BulletinBoard project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(*6-pjdm34x85g@rohl+-p8%tv1e_qkms9&r4qhupb#)*b$%&e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',
    # регистрация приложения appAccounts
    'appAccounts.apps.AppaccountsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'BulletinBoard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # `allauth` обязательно нужен этот процессор
                # 'django.template.context_processors.request',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BulletinBoard.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Этого раздела может не быть, добавьте его в указанном виде.
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Настройки почтового сервера
'''
Первые два параметра указывают на то, что поле email является обязательным
и уникальным.
Третий, наоборот, — говорит, что username необязательный.
Следующий параметр указывает, что аутентификация будет происходить
посредством электронной почты.
Напоследок мы указываем, что верификация почты отсутствует.

Обычно на почту отправляется подтверждение аккаунта,
после подтверждения которого восстанавливается полная функциональность
учётной записи.
'''

ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']
# обязательные поля для регистрации
ACCOUNT_LOGIN_METHODS = {'email'} # методы входа в систему
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# 'None' - проверка email — отсутствует;
# 'mandatory' — не пускать пользователя на сайт до момента подтверждения почты;
# 'optional' — сообщение о подтверждении почты будет отправлено, но
# пользователь может залогиниться на сайте без подтверждения почты.
# Чтобы allauth распознал нашу форму как ту, что должна выполняться вместо
# формы по умолчанию, необходимо добавить.
ACCOUNT_FORMS = {"signup": "appAccounts.forms.CustomSignupForm"}

# Настройки редиректов allauth
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# Блок кода настроек нашего проекта работы с почтой (Yandex-почтой)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# 'django.core.mail.backends.console.EmailBackend' - для писем в терминал
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# класс отправителя сообщений (у нас установлено значение по умолчанию,
# а значит, эта строчка не обязательна)
EMAIL_HOST = 'smtp.yandex.ru'
# Хост почтового сервера — это адрес или доменное имя сервера, который
# обрабатывает и отправляет электронную почту.
# Хост почтового сервера может быть использован как для отправки, так и для
# получения почты.
EMAIL_PORT = 465
"""
Порт, на который почтовый сервер принимает письма, называется почтовым портом.
Один из самых распространенных почтовых портов - это порт 25, который
используется для передачи электронной почты
по протоколу SMTP (Simple Mail Transfer Protocol).
Однако, существуют и другие почтовые порты, такие как порт 587,
который используется для SMTP с шифрованием TLS (Transport Layer Security),
и порт 465,
который используется для SMTP с шифрованием SSL (Secure Sockets Layer).
Использование конкретного почтового порта зависит от настроек и требований
почтового сервера.
"""
EMAIL_HOST_USER = "AndreyTestSF"
# логин пользователя почтового сервера
EMAIL_HOST_PASSWORD = "zuqvkobqbkixymje"  # noqa
# пароль пользователя почтового сервера
EMAIL_USE_TLS = False
# необходимость использования TLS
# (зависит от почтового сервера,
# смотрите документацию по настройке работы с сервером по SMTP)
EMAIL_USE_SSL = True

DEFAULT_FROM_EMAIL = "AndreyTestSF@yandex.ru"
# Почтовый адрес отправителя по умолчанию
# Последняя строчка будет использоваться как значение по умолчанию
# для поля from в письме.
# То есть будет отображаться в поле «отправитель» у получателя письма.

SERVER_EMAIL = "AndreyTestSF@yandex.ru"
# SERVER_EMAIL содержит адрес почты, от имени которой будет отправляться письмо
# при вызове mail_admins и mail_manager.
# А переменная MANAGERS будет хранить список имён менеджеров и адресов
# их почтовых ящиков.

EMAIL_SUBJECT_PREFIX = 'Bulletin Board MMORPG'

